# TTP Analyzer Configuration File

# Directory Structure
GROUPS_DIR: "groups"
OUTPUT_DIR: "output"
DATA_DIR: "data"
LOG_DIR: "logs"

# Core Performance Settings
MIN_CONFIDENCE_THRESHOLD: 0.6          # Higher threshold = fewer false positives, faster processing
ENABLE_HEURISTIC_EXTRACTION: false     # Disable for maximum speed (regex-only)
MAX_REPORT_SIZE_MB: 25                  # Reasonable limit to prevent memory issues

# MITRE Data Management (LOCAL APPROACH - RECOMMENDED)
ATTACK_DATA_FILE: "data/attack_data.json"
AUTO_UPDATE_ENABLED: false             # Manual updates for stability
UPDATE_THRESHOLD_DAYS: 30              # Check for updates monthly (when enabled)

# Alternative STIX2/TAXII Settings (NOT RECOMMENDED FOR PERFORMANCE)
# USE_STIX2: false                     # Keep false for performance
# TAXII_SERVER: "https://cti-taxii.mitre.org/stix/"
# STIX2_COLLECTION_ID: "95ecc380-afe9-11e4-9b6c-751b66dd541e"

# HTTP Request Optimization
REQUEST_TIMEOUT: 15                     # Faster timeout
RATE_LIMIT_DELAY: 0.5                  # Minimal delay between requests
MAX_RETRIES: 2                          # Fewer retries for speed
MAX_CONCURRENT_REQUESTS: 3              # Conservative for reliability

# Content Processing Optimization
MIN_CONTENT_LENGTH: 100                 # Skip very short content quickly
PRESERVE_TTP_CONTEXT: false             # Disable complex context preservation
ENHANCED_NAME_MATCHING: false           # Disable for speed (ID-only matching)
STRICT_ID_VALIDATION: false             # Less validation = faster processing

# Memory and Processing Optimization
CACHE_REPORTS: false                    # Disable caching for simplicity
CACHE_DURATION_HOURS: 0                 # No caching
SAVE_INTERMEDIATE_RESULTS: false        # Skip intermediate file saves
DETAILED_LOGGING: false                 # Reduce logging overhead

# Visualization Settings
FIGURE_DPI: 150                         # Lower DPI for faster generation
FIGURE_SIZE: [10, 6]                    # Smaller figures = faster rendering
COLOR_PALETTE: "tab10"                  # Simpler palette

# Logging Configuration
LOG_LEVEL: "INFO"                 # Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FORMAT: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
LOG_FILE: "logs/ttp_analyzer.log"

# Performance Monitoring
ENABLE_PERFORMANCE_METRICS: true       # Track timing for optimization
LOG_PERFORMANCE_STATS: false           # Don't log every operation

# Feature Flags for Performance Testing
EXPERIMENTAL:
  ultra_fast_mode: true                 # Enable all speed optimizations
  skip_visualization: false             # Set true to skip chart generation
  minimal_output: false                 # Set true for JSON-only output
  batch_processing: false               # Set true for batch optimization

# Validation Settings (Relaxed for Speed)
VALIDATION_RULES:
  validate_technique_ids: true          # Keep basic validation
  validate_dates: false                 # Skip date validation
  validate_sources: false               # Skip source validation
  require_minimum_ttps: false           # Don't require minimum TTP count

# Background Processing
BACKGROUND_PROCESSING:
  enabled: false                        # Disable background tasks
  update_check_interval_hours: 24       # If enabled, check daily
  max_background_threads: 1             # Minimal threading

# Error Handling (Fast-Fail Approach)
ERROR_HANDLING:
  continue_on_parse_error: true         # Don't stop on individual failures
  max_consecutive_failures: 5          # Stop after 5 consecutive failures
  retry_failed_reports: false          # Don't retry for speed

# Performance Targets (for monitoring)
PERFORMANCE_TARGETS:
  max_initialization_time_seconds: 1.0
  max_report_parse_time_seconds: 2.0
  max_ttp_extraction_time_seconds: 0.1
  max_total_analysis_time_seconds: 60.0

# Debug and Development
DEBUG_MODE: false
VERBOSE_TIMING: false                   # Set true only for performance debugging
PROFILE_ENABLED: false                  # Enable for detailed profiling

# STIX2/TAXII Alternative Configuration (for reference only)
# Uncomment and modify if you decide to test STIX2 approach
# STIX2_CONFIG:
#   use_local_stix: true                # Use local STIX files vs TAXII server
#   stix_data_path: "data/stix2/"
#   enable_relationship_queries: false   # Disable complex queries for speed
#   memory_store_cache: true            # Cache STIX memory store
#   lazy_loading: true                  # Load STIX data on demand

# Performance Comparison Notes:
# - Local JSON: ~0.1s initialization, O(1) lookups
# - STIX2 Local: ~1-3s initialization, ~0.01s queries  
# - TAXII Remote: ~3-8s initialization, ~0.5-2s queries
# - Current target: <60s total analysis time (vs 582s original)